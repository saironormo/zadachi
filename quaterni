#include <iostream>
using namespace std;


class quaterni {
public: double a, b, c, d;

public: quaterni ()
{a = b = c = d = 0;}

public: quaterni(double a, double b, double c, double d) 
{this->a = a;
this->b = b;
this->c = c;
this->d = d;}

public: quaterni operator=(const quaterni &A)
{this->a = A.a;
this->b = A.b;
this->c = A.c;
this->d = A.d;
return *this;}

public: quaterni operator-(const quaterni &A)
{this->a = -A.a;
this->b = -A.b;
this->c = -A.c;
this->d = -A.d;
return *this;}

};



quaterni operator*(quaterni A, double q)
{quaterni t;
t.a = A.a*q;
t.b = A.b*q;
t.c = A.c*q;
t.d = A.d*q;
return t;}


 quaterni operator-(const quaterni &A, const quaterni &B)
{return quaterni(A.a - B.a, A.b - B.b, A.c - B.c, A.d - B.d);}


quaterni operator+(const quaterni &A, const quaterni &B)
{return quaterni(A.a + B.a, A.b + B.b, A.c + B.c, A.d + B.d);}


 quaterni operator*(quaterni &A, quaterni &B)
{quaterni t;
    t.a = A.a * B.a - A.b * B.b - A.c * B.c - A.d * B.d;
t.b = A.a * B.b + A.b * B.a + A.c * B.d - A.d * B.c;
t.c = A.a * B.c + A.c * B.a + A.d * B.b - A.b * B.d;
t.d = A.a * B.d + A.d * B.a + A.b * B.c - A.c * B.b;
return t;}


quaterni operator/(quaterni &A, quaterni &B)
{double z;
z = B.a*B.a + B.b*B.b + B.c*B.c + B.d*B.d;
B.a = A.a;
B.b = -A.b;
B.c = -A.c;
B.d = -A.d;
return A*B*z;}

int main()
{return 0;}
